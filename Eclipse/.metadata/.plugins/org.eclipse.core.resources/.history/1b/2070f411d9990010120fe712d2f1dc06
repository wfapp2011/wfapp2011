package de.uni_potsdam.hpi.wfapp2011.activiti;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.activiti.engine.ProcessEngine;
import org.activiti.engine.ProcessEngines;
import org.activiti.engine.repository.ProcessDefinition;
import org.activiti.engine.repository.ProcessDefinitionQuery;
import org.activiti.engine.runtime.ProcessInstance;

import de.uni_potsdam.hpi.wfapp2011.constants.Constants;

public class ProcessAdministration implements ProcessAdministrationInterface {
	
	/** 
	 * This method starts a process instance of the given ProcessName.
	 * 
	 * */
	public String startProcess(String processName, 
			Date startProposalDate, 
			Date endProposalDate, 
			Date startVotingDate, 
			Date endVotingDate, 
			Date endMatchingDate)
	{
		String processInstanceId = Constants.DATE_ERROR;
		
		ProcessEngine processEngine = ProcessEngines.getProcessEngine("default");
		
		//Get all process definitions with the given process name
		ProcessDefinitionQuery query = processEngine.getRepositoryService().
			createProcessDefinitionQuery().processDefinitionName(processName);
		
		// Get only the latest process definition 
		ProcessDefinition processDefinition = query.orderByProcessDefinitionVersion().desc().listPage(0, 10).get(0);
		String id = processDefinition.getId();
		
		// make sure that the dates have the correct order.
		if (startProposalDate.before(endProposalDate) && 
				endProposalDate.before(startVotingDate) && 
				startVotingDate.before(endVotingDate) && 
				endVotingDate.before(endMatchingDate))
		{
			ProcessInstance processInstance = ProcessEngines.getProcessEngine("default").getRuntimeService().startProcessInstanceById(id);
			processInstanceId = processInstance.getId();
			
			//Setting the Default Deadline of the whole process, used for the boundary Events
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.DEFAULT_DEADLINE_PROCESS, dateToISO8601(endMatchingDate));
		
			//Setting the deadlines, which will be changeable from outside the process. 
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.START_PROPOSAL_COL_INPUT, dateToISO8601(startProposalDate));
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.DEADLINE_PROPOSAL_COL_INPUT, dateToISO8601(endProposalDate));
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.DEADLINE_TOPISCS_PUBL_INPUT, dateToISO8601(startVotingDate));
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.DEADLINE_VOTING_INPUT, dateToISO8601(endVotingDate));
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.DEADLINE_PROCESS_INPUT, dateToISO8601(endMatchingDate));
			
			//Setting the deadlines used for the timeEvents. Changes will be copied in the service task. 
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.START_PROPOSAL_COL, dateToISO8601(startProposalDate));
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.DEADLINE_PROPOSAL_COL, dateToISO8601(endProposalDate));
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.DEADLINE_TOPICS_PUBL, dateToISO8601(startVotingDate));
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.DEADLINE_VOTING, dateToISO8601(endVotingDate));
			processEngine.getRuntimeService().setVariable(processInstanceId, Constants.DEADLINE_PROCESS, dateToISO8601(endMatchingDate));
			
			processEngine.close();
		}
		return processInstanceId;
	}
	
	public String dateToISO8601(Date date) {
		SimpleDateFormat iso = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
		return iso.format(date);
	}
	
	public static void main(String[] args){
		
		ProcessAdministration process = new ProcessAdministration();
		Date startCollection = new Date();
		Date deadlineCollection = new Date();
		Date deadlineTopics = new Date();
		Date deadlineVoting = new Date();
		Date deadlineProcess = new Date();
		System.out.println("Main-Methode: Deadline Collection: "+ process.dateToISO8601(deadlineCollection));
		startCollection.setMinutes(startCollection.getMinutes() + 5);
		deadlineCollection.setMinutes(deadlineCollection.getMinutes() + 10);
		deadlineTopics.setMinutes(deadlineTopics.getMinutes()+15);
		deadlineVoting.setMinutes(deadlineVoting.getMinutes()+ 20);
		deadlineProcess.setMinutes(deadlineProcess.getMinutes()+25);
		
		
		System.out.println("Ende Main: "+process.startProcess("DegreeProjectProcessNew2", startCollection, deadlineCollection, deadlineTopics, deadlineVoting, deadlineProcess));
		
	} 
	
	
	
}
